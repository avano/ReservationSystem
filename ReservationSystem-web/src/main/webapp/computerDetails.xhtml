
<ui:composition template="./UITemplate.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:f="http://java.sun.com/jsf/core">

	<h:head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	</h:head>

	<ui:define name="content">
		<rich:collapsiblePanel header="#{msg.computerDetails}"
			switchType="client">
			<rich:message for="udaje" />
			<div>
				<h:form id="udaje">
					<h:panelGrid columns="2">
						<h:outputText value="#{msg.name}:" />
						<h:inputText value="#{computerBean.selected.name}"
							rendered="#{userBean.getUserSes().admin}"
							validator="#{validationBean.checkPassword}"
							validatorMessage="#{msg.nameEmpty}">
							<rich:validator />
						</h:inputText>
						<h:outputText value="#{computerBean.selected.name}"
							rendered="#{!userBean.getUserSes().admin}" />
						<h:outputText value="#{msg.ip}:" />
						<h:inputText value="#{computerBean.selected.ip}"
							rendered="#{userBean.getUserSes().admin}"
							validator="#{validationBean.checkPassword}"
							validatorMessage="#{msg.hostnameEmpty}">
							<rich:validator />
						</h:inputText>
						<h:outputText value="#{computerBean.selected.ip}"
							rendered="#{!userBean.getUserSes().admin}" />
						<h:outputText value="#{msg.group}:" />
						<h:inputText value="#{computerBean.selected.compGroup}"
							rendered="#{userBean.getUserSes().admin}" />
						<h:outputText value="#{computerBean.selected.compGroup}"
							rendered="#{!userBean.getUserSes().admin}" />
						<h:outputText value="#{msg.description}:" />
						<h:inputText value="#{computerBean.selected.description}"
							rendered="#{userBean.getUserSes().admin}" />
						<h:outputText value="#{computerBean.selected.description}"
							rendered="#{!userBean.getUserSes().admin}" />
						<h:commandButton value="#{msg.save}"
							action="#{computerBean.update()}" styleClass="ui-corner-all"
							rendered="#{userBean.getUserSes().admin}" />
					</h:panelGrid>
				</h:form>
			</div>
		</rich:collapsiblePanel>
		<rich:collapsiblePanel header="#{msg.myReservations}"
			switchType="client">
			<h:outputText value="#{msg.compNoRes}"
				rendered="#{!reservationBean.compHasReservations(computerBean.current.id,userBean.method)}" />

			<rich:message for="test" ajaxRendered="true" />
			<div id="deleteDialog" title="#{msg.confirmDelete}"
				style="display: none;">
				<a4j:outputPanel id="delete">
					<h:outputText value="#{msg.reallyDelete}?" />
					<br />
					<br />
					<h:panelGrid columns="2">
						<h:outputText value="#{msg.user}:" />
						<h:outputText value="#{reservationBean.current.user.userName}" />
						<h:outputText value="#{msg.compName}:" />
						<h:outputText value="#{reservationBean.current.computer.name}" />
						<h:outputText value="#{msg.since}:" />
						<h:outputText
							value="#{reservationBean.getDateFormat(reservationBean.current.since)}" />
						<h:outputText value="#{msg.until}:" />
						<h:outputText
							value="#{reservationBean.getDateFormat(reservationBean.current.until)}" />
					</h:panelGrid>
					<br />
				</a4j:outputPanel>
				<h:form>
					<center>
						<h:commandButton value="#{msg.delete}"
							action="#{reservationBean.deleteReservation()}"
							styleClass="ui-corner-all" />
					</center>
				</h:form>
			</div>
			<div id="cancelDialog" title="#{msg.confirmCancel}"
				style="display: none;">
				<a4j:outputPanel id="cancelPanel">
					<h:outputText value="#{msg.reallyCancel}?" />
					<br />
					<br />
					<h:panelGrid columns="2">
						<h:outputText value="#{msg.user}:" />
						<h:outputText value="#{reservationBean.current.user.userName}" />
						<h:outputText value="#{msg.compName}:" />
						<h:outputText value="#{reservationBean.current.computer.name}" />
						<h:outputText value="#{msg.since}:" />
						<h:outputText
							value="#{reservationBean.getDateFormat(reservationBean.current.since)}" />
						<h:outputText value="#{msg.until}:" />
						<h:outputText
							value="#{reservationBean.getDateFormat(reservationBean.current.until)}" />
					</h:panelGrid>
					<br />
				</a4j:outputPanel>
				<h:form>
					<center>
						<h:commandButton value="#{msg.confirmCancel}"
							action="#{reservationBean.cancelReservation()}"
							styleClass="ui-corner-all" />
					</center>
				</h:form>
			</div>
			<div id="editDialog" title="#{msg.editReservation}"
				style="display: none;">
				<div>
					<h:form id="frm">
						<a4j:outputPanel id="edit">
							<h:panelGrid columns="2">
								<h:outputText value="#{msg.userName}:" />
								<h:outputText id="test"
									value="#{reservationBean.current.user.userName}"
									style="width: 130px;" />
								<h:outputText value="#{msg.compName}:" />
								<h:selectOneMenu value="#{reservationBean.editComputer}"
									style="width: 132px;">
									<f:selectItems value="#{computerBean.getComputersArray()}"
										var="c" itemLabel="#{c.name}" itemValue="#{c.id}" />
									<a4j:ajax event="change" render="table" />
								</h:selectOneMenu>

								<h:outputText value="#{msg.since}:" />
								<rich:calendar id="editCal"
									value="#{reservationBean.editSinceDate}"
									datePattern="#{languageBean.localePattern}"
									showApplyButton="true">
									<a4j:ajax event="change" render="table" />
								</rich:calendar>
								<h:outputText value="#{msg.until}:" />
								<rich:calendar value="#{reservationBean.editUntilDate}"
									datePattern="#{languageBean.localePattern}"
									showApplyButton="true">
									<a4j:ajax event="change" render="table" />
								</rich:calendar>
								<h:outputText value="#{msg.reservationComment}:" />
								<h:inputText value="#{reservationBean.editComment}"
									style="width: 130px;" />
							</h:panelGrid>

						</a4j:outputPanel>
						<center>
							<h:commandButton id="updateBtn" value="#{msg.save}"
								action="#{reservationBean.update}" styleClass="ui-corner-all">
							</h:commandButton>
						</center>
					</h:form>
					<h:form id="cancel">
						<h:commandButton id="cancelBtn" value="#{msg.cancel}"
							action="#{reservationBean.eraseDates()}"
							style="visibility: hidden;" />
					</h:form>
				</div>
			</div>
			<div>
				<h:form id="tabulka">
					<rich:dataTable
						value="#{reservationBean.getReservationsByComp(computerBean.selected.id,userBean.method)}"
						var="res" style="border:solid 1px; width: 100%"
						rendered="#{reservationBean.compHasReservations(computerBean.selected.id,userBean.method)}"
						id="table">
						<rich:column sortBy="#{res.user.getUserName()}"
							sortOrder="#{sortingBean.nameOrder}" id="name"
							style="width: 300px;">
							<f:facet name="header">
								<h:form>
									<h:commandLink value="#{msg.userName}"
										action="#{sortingBean.sortByName()}" />
								</h:form>
							</f:facet>
							<h:outputText value="#{res.user.getUserName()}" />
						</rich:column>
						<rich:column sortBy="#{res.since}"
							sortOrder="#{sortingBean.sinceOrder}" id="since"
							style="width: 300px;">
							<f:facet name="header">
								<h:commandLink value="#{msg.since}"
									action="#{sortingBean.sortBySince()}" />
							</f:facet>
							<h:outputText value="#{reservationBean.getDateFormat(res.since)}" />
						</rich:column>
						<rich:column sortBy="#{res.until}"
							sortOrder="#{sortingBean.untilOrder}" id="until"
							style="width: 300px;">
							<f:facet name="header">
								<h:commandLink value="#{msg.until}"
									action="#{sortingBean.sortByUntil()}" />
							</f:facet>
							<h:form>
								<h:outputText
									value="#{reservationBean.getDateFormat(res.until)}" />
							</h:form>
						</rich:column>
						<rich:column id="comment">
							<f:facet name="header">
								<h:commandLink value="#{msg.reservationComment}" />
							</f:facet>
							<h:form>
								<h:outputText value="#{res.comment}" />
							</h:form>
						</rich:column>
						<rich:column style="width: 50px;">
							<f:facet name="header">
								<h:outputText value="#{msg.action}" />
							</f:facet>
							<h:form
								rendered="#{reservationBean.renderEditDeleteButtons(userBean.getUserSes(),res)}">
								<center>
									<a4j:commandLink
										action="#{reservationBean.getCurrentReservation()}"
										onclick="showEditDialog();" value="#{msg.edit}" render="edit" />
									<br />
									<a4j:commandLink
										action="#{reservationBean.getCurrentReservation()}"
										onclick="showCancelDialog();" value="#{msg.cancel}"
										render="cancelPanel" />
									<br />
									<a4j:commandLink
										action="#{reservationBean.getCurrentReservation()}"
										onclick="showDeleteDialog();" value="#{msg.delete}"
										render="delete" rendered="#{userBean.getUserSes().admin}" />
								</center>
							</h:form>
						</rich:column>
					</rich:dataTable>
				</h:form>
				<h:form style="float:right;">
					<h:commandButton value="#{msg.switchToAll}"
						action="#{userBean.changeMethod()}"
						rendered="#{!userBean.isAll()}" styleClass="ui-corner-all" />
					<h:commandButton value="#{msg.switchToCurrent}"
						action="#{userBean.changeMethod()}" rendered="#{userBean.isAll()}"
						styleClass="ui-corner-all" />
				</h:form>
				<br />
			</div>
		</rich:collapsiblePanel>
		<rich:collapsiblePanel header="#{msg.calendar}" switchType="client"
			styleClass="panelClass">
			<div id="forms" style="margin-bottom: 5px;">
				<rich:message for="dtdForm" />
				<h:form id="filterForm" style="float: right; clear: right;">
					<h:inputText id="filterQuery" value="#{userBean.filterQuery}" />
					<button id="searchBtn" style="width: 29px; height: 17px;" />
				</h:form>
				<h:form id="dtdForm">
					<h:outputText value="#{msg.daysToShow}: " />
					<h:inputText value="#{userBean.daysToDisplay}" style="width: 15px;" />
					<h:commandButton type="submit" value="#{msg.submit}"
						styleClass="ui-corner-all" />
				</h:form>
			</div>

			<div id="calendar" class="calendar"></div>
			<div id="reserveButton">
				<h:form>
					<a4j:commandButton styleClass="ui-corner-all"
						value="#{msg.reserve}" onclick="$j('#addResDiv').fadeIn(700);"
						style="float:left;" />
				</h:form>
			</div>
			<div id="changeCalendarTypeDiv">
				<h:form id="changeCalendarType" style="float:right;">
					<h:inputText id="calendarType" value="#{userBean.calendarType}"
						style="display:none" />
					<h:commandButton id="changeToHours" value="#{msg.changeToHours}"
						rendered="#{userBean.isDays()}" onclick="changeCalType();"
						styleClass="ui-corner-all" />
					<h:commandButton id="changeToDays" value="#{msg.changeToDays}"
						rendered="#{!userBean.isDays()}" onclick="changeCalType();"
						styleClass="ui-corner-all" />
				</h:form>
			</div>
			<br />
			<div id="addResDiv" class="addRes" style="display: none">
				<rich:panel>
					<a4j:outputPanel ajaxRendered="false">
						<rich:message id="errorMessage" ajaxRendered="false" />
					</a4j:outputPanel>
					<h:outputText value="#{msg.reallyReserve}?" />
					<div id="labels">
						<ul id="UlRes">

						</ul>
					</div>
					<h:form id="redirectForm">
						<h:inputText id="redirectInput" value="#{computerBean.computerId}"
							style="display:none" />
						<h:commandButton id="redirectButton"
							action="#{computerBean.redirect()}" style="display:none" />
					</h:form>
					<div id="errorDialog" title="#{msg.error}" style="display: none;">
						<a4j:outputPanel id="errorPanel">
							<h:outputText value="#{msg.errorReserving}: #{msg.reserved}" />
							<br />
							<br />

							<h:outputText value="#{reservationBean.error}" escape="false" />
						</a4j:outputPanel>
						<h:form>
							<center>
								<a4j:commandButton value="OK" onclick="hideError()"
									styleClass="ui-corner-all" />
							</center>
						</h:form>
					</div>
					<h:form id="addResForm">
						<a4j:commandButton value="#{msg.reserve}!"
							action="#{reservationBean.addNewReservation()}"
							onbegin="toBean(); #{reservationBean.setUser_id(userBean.getIdSes())}"
							oncomplete="hideWindow(#{!reservationBean.badReservation})"
							render="errorPanel,table" styleClass="ui-corner-all" />

						<a4j:commandButton value="#{msg.cancel}"
							onclick="hideWindow(true)" styleClass="ui-corner-all" />
						<h:form id="selectForm" style="display:none">
							<h:inputText id="selectedColumns"
								value="#{reservationBean.selected}" style="display:none" />
							<h:inputText id="selectedReservations"
								value="#{reservationBean.selectedRes}" style="display:none" />
							<a4j:commandButton type="submit" id="selectButton"
								style="display:none" />
						</h:form>
					</h:form>
				</rich:panel>
			</div>
		</rich:collapsiblePanel>
		<script type="text/javascript">
            var cols = new Array();
            refreshCal(null);
            
            function showEditDialog() {
                $j("#editDialog").dialog({modal: true, width: '350', height: '350'}).bind('dialogclose', function(event, ui) { $j("[id*='cancel:cancelBtn']").click(); });
            }
            
            function showCancelDialog() {
                $j("#cancelDialog").dialog({modal:true, width: 'auto'});
            }
            function showDeleteDialog() {
                $j("#deleteDialog").dialog({modal:true, width: 'auto'});
            }
            
            function changeCalType() {
                var calType = $j("[id*='changeCalendarType:calendarType']").val();
                if (calType == "true") {
                    $j("[id*='changeCalendarType:calendarType']").val("null");
                }
                else {
                    $j("[id*='changeCalendarType:calendarType']").val("true");
                }
            }
            function bla() {
                $j("[id*='selectForm:selectedColumns']").val("");
                $j("[id*='selectForm:selectedReservations']").val("");
                removeAll(cols);
            }
            
            function refreshSelected() {                
                var selected = $j("[id*='selectForm:selectedColumns']").val();
                if (selected != "") { 
                    var IDs = selected.split(",");
                    for (var k = IDs.length-1; k >= 0; k--) {
                        var td = document.getElementById(IDs[k]);
                        if (td != null) {
                            td.classList.add('ui-selected');
                            addElement(cols,IDs[k]);
                        }
                    }
                }
                refreshReservations();
            }
            
            
            
            function toBean() {
                var sortedElements = bubbleSort(getElements(cols));
                $j("[id*='selectForm:selectedColumns']").val(sortedElements);
                $j("[id*='selectForm:selectedReservations']").val(makeRes(sortedElements));
                $j("[id*='selectForm:selectButton']").click();
            }
            
            
            
            function makeRes(resArray) {
                var retArray = new Array();
                var startDate = null;
                var endDate = null;
                var id = null;
                var compareId = null;
                var end = false;
                var compName = null;
                var calType = $j("[id*='changeCalendarType:calendarType']").val();
                var nextCellMillis;
                if (calType == "true") {
                    nextCellMillis = 3600000;
                }
                else {
                    nextCellMillis = 86400000;
                }
                for(var i = 0; i &lt; resArray.length; i++) {
                    if (end) {
                        break;
                    };
                    
                    var res = resArray[i].split(";");
                    id = parseInt(res[0]);
                    
                    compName = res[2];
                    var d1 = new Date(parseInt(res[1]));
                    startDate = new Date(d1.getTime());
                    endDate = new Date(d1.getTime());
                    var counter = 1;
                    var k = i + 1;
                    for (var k = i + 1; k &lt; resArray.length; k++) {
                        res = resArray[k].split(";");
                        compareId = parseInt(res[0]);
                        var d2 = new Date(parseInt(res[1]));
                        if (id == compareId) {
                            if (d2.getTime() == (d1.getTime() + counter * nextCellMillis)) { 
                                endDate = new Date(d2.getTime());
                            }
                            else {
                                if (d2.getTime() == (d1.getTime() + (counter-1) * nextCellMillis + (nextCellMillis+3600000))) {
                                    endDate = new Date(d2.getTime());
                                }
                                else if (d2.getTime() == (d1.getTime() + (counter-1) * nextCellMillis + (nextCellMillis-3600000)))
                                {
                                    endDate = new Date(d2.getTime());
                                }
                                else {
                                    i = k-1;
                                    break; 
                                } 
                            }
                        }
                        else {
                            i = k-1;
                            break;
                        }
                        counter++;
                        if (k == resArray.length-1) {
                            end = true;
                        }
                    }
                    if (calType == "true") {
                            
                        endDate.setHours(endDate.getHours(),59,59,999);
                    }
                    else {
                        startDate.setHours(0,0,0,0);
                        endDate.setHours(23,59,59,999);
                    }
                    retArray.push(id+";"+startDate.getTime()+";"+endDate.getTime()+";"+compName);
                } 
                return (retArray);
            }
            
            
            
            function refreshReservations() {
                var resArray = ($j("[id*='selectForm:selectedReservations']").val()).split(",");
                $('#UlRes').find('*').remove();
                if (resArray == "") return;
                for (var i = 0; i &lt; resArray.length; i++) {
                    var currentRes = resArray[i].split(";");
                    var since = new Date(parseInt(currentRes[1]));
                        
                    var sinceString = since.getDate() + "." + (since.getMonth()+1) + "." + since.getFullYear() + " " + since.getHours() + ":0" + since.getMinutes();
                    var until = new Date(parseInt(currentRes[2]));
                    var untilString = until.getDate() + "." + (until.getMonth()+1) + "." + until.getFullYear() + " " + until.getHours() + ":" + until.getMinutes();
                    var myString = "&lt;ul&gt;&lt;b&gt;"+currentRes[3]+"&lt;/b&gt;: "+sinceString+" - "+untilString+"&lt;/ul&gt;";
                    $j('#UlRes').append(myString);
                }
            }
            
            $j(document).ready(function() {
                //alert($j('#calendar').html());
                console.log($j('#calendar').html());
                $j("[id*='searchBtn']").button({
                    text: false,
                    icons: {
                        primary: 'ui-icon-search'
                    }
                })
                $j('#addResDiv').draggable(); // make the add reservation dialog draggable
                if (hasElements(cols)) {
                    //$j('#addResDiv').fadeIn(700);
                }
                $j("#calendar").selectable({ // make free cells selectable
                    filter: '.free',
                    selected: function(event, ui) {
                        addElement(cols,ui.selected.id);
                        //$j('#addResDiv').fadeIn(700);
                    },
                    unselected: function(event, ui) {
                        removeElement(cols,ui.unselected.id);
                        
                    },
                    stop: function(event, ui) {
                        toBean();
                        refreshReservations();
                        if (!hasElements(cols)) {
                            $j('#addResDiv').fadeOut(350);
                        }
                    }
                });              
                
                $j('.goto').live("click", function(e) {
                    $j('.datepicker').datepicker({
                        dateFormat: 'd.M.yyyy',
                        firstDay: 1,
                        defaultDate: getDateFromCookie(),
                        onSelect: function() {
                            var day = $j('.datepicker').datepicker('getDate').getDate();
                            var month = $j('.datepicker').datepicker('getDate').getMonth();
                            var year = $j('.datepicker').datepicker('getDate').getFullYear();
                            refreshCal(new Date(year, month, day));
                        }
                    });
                    $j.datepicker.setDefaults($j.datepicker.regional[getLocaleFromCookie()]);
                    $j('.datepicker').datepicker('show');
                    $j('.datepicker').css("background-color","#ff0000");
                });
            });
            
            function refreshCal(createDate) {
                var startDate = new Date();
                re = new RegExp("calDate=([^;]+)");
                var dateFromCookie = re.exec(document.cookie); // get date from cookie
                dtdre = new RegExp("daysToDisplay=([^;]+)");
                var dtdFromCookie = dtdre.exec(document.cookie);
                var dtd = 7;
                if (dtdFromCookie != null) {
                    dtd = parseInt(dtdFromCookie[1]);
                }
                if (createDate == null) {
                    createDate = getDateFromCookie();
                }
                var query = $j("[id*='filterForm:filterQuery']").val();
                $j('#calendar').resCal({date: createDate, query: query, hours: "#{userBean.calendarType}", computerId: "#{computerBean.selected.id}", locale: getLocaleFromCookie(), userName: "#{userBean.getNameSes()}", daysToDisplay: dtd}); // render calendar                
                refreshSelected();
            }
            
            $j("table#caltable .day-column-body").live("mousedown",function(e) {
                var id = $j(this).attr("id");
                $j("[id*='redirectForm:redirectInput']").val(id);
                $j("[id*='redirectForm:redirectButton']").click();
            });
            function hideWindow(bool) {
                $j('#addResDiv').hide();
                bla();
                refreshCal(null);
                if (!bool) {
                    //                    $j('#addResDiv').fadeOut(350);
                    //                    $j('#errorMessage').hide();
                    $j('#errorDialog').dialog({modal:true, width: 'auto'});                    
                }
            }
            function hideError() {
                $j('#errorDialog').dialog('close'); 
            }
        </script>

	</ui:define>

	<ui:define name="left">
		<ui:include src="leftBar.xhtml" />
	</ui:define>

	<ui:define name="top">
		<ui:include src="topBar.xhtml" />
	</ui:define>

	<ui:define name="bottom">
		<ui:include src="bottomBar.xhtml" />
	</ui:define>



</ui:composition>
